{"version":3,"sources":["webpack:///path---link-bender-49260e2e2bb8309716d2.js","webpack:///./.cache/json/link-bender.json"],"names":["webpackJsonp","280","module","exports","data","project","id","name","title","url","description","tools","slug","img","imgMock","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,SAAWC,GAAA,4BAAAC,KAAA,cAAAC,MAAA,qBAAAC,IAAA,2CAAAC,YAAA,yeAAAC,MAAA,4EAAAC,KAAA,cAAAC,KAA2uBJ,IAAA,oDAAyDK,SAAYL,IAAA,sDAA2DM,aAAgBH,KAAA","file":"path---link-bender-49260e2e2bb8309716d2.js","sourcesContent":["webpackJsonp([125991626666514],{\n\n/***/ 280:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"project\":{\"id\":\"cjkw1r18pnb9p09538hew1ima\",\"name\":\"Link Bender\",\"title\":\"Link Bender (2018)\",\"url\":\"https://github.com/marcaaron/link-bender\",\"description\":\"This is a very simple GraphQL Ruby / React on Rails example app that leverages the back end rails API laid out in the How To GraphQL – GraphQL Ruby tutorial written by Radoslav Stankov. This project extends that tutorial by implementing a React on Rails front end with Apollo Client to hit the rails server and Apollo Link-State to manage local application state. It's mostly a Front End exercise, but I added several Ruby GraphQL queries, types, and mutations to get a feel for things.\",\"tools\":\"Tools Used: GraphQL Ruby, React on Rails, React Apollo, Apollo Link State\",\"slug\":\"link-bender\",\"img\":{\"url\":\"https://media.graphcms.com//h0G52i3T3G0N8PzMaw4r\"},\"imgMock\":{\"url\":\"https://media.graphcms.com//yagHBJTdSzJZTTypLC6g\"}}},\"pathContext\":{\"slug\":\"link-bender\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---link-bender-49260e2e2bb8309716d2.js","module.exports = {\"data\":{\"project\":{\"id\":\"cjkw1r18pnb9p09538hew1ima\",\"name\":\"Link Bender\",\"title\":\"Link Bender (2018)\",\"url\":\"https://github.com/marcaaron/link-bender\",\"description\":\"This is a very simple GraphQL Ruby / React on Rails example app that leverages the back end rails API laid out in the How To GraphQL – GraphQL Ruby tutorial written by Radoslav Stankov. This project extends that tutorial by implementing a React on Rails front end with Apollo Client to hit the rails server and Apollo Link-State to manage local application state. It's mostly a Front End exercise, but I added several Ruby GraphQL queries, types, and mutations to get a feel for things.\",\"tools\":\"Tools Used: GraphQL Ruby, React on Rails, React Apollo, Apollo Link State\",\"slug\":\"link-bender\",\"img\":{\"url\":\"https://media.graphcms.com//h0G52i3T3G0N8PzMaw4r\"},\"imgMock\":{\"url\":\"https://media.graphcms.com//yagHBJTdSzJZTTypLC6g\"}}},\"pathContext\":{\"slug\":\"link-bender\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/link-bender.json\n// module id = 280\n// module chunks = 125991626666514"],"sourceRoot":""}